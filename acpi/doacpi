#!/usr/bin/bash

# -x: use x (with tmux)
# -t: use tmux (attach)
# -f: force: don't run lock

AS=${0##*/}
AS_SESSION=${AS/do/}

if [[ "$AS_SESSION" == 'acpi' ]]; then
  AS_SESSION=''
fi

use_x=false
use_tmux=false
force=false

SWITCH=''

for arg in $@; do
  case $arg in
    '-x') use_x=true; use_tmux=true ; SWITCH='-t' ;;
    '-t') use_tmux=true; SWITCH='-t' ;;
    '-f') force=true ;;
    '-h'|'--help')
      echo "Usage:       doacpi [OPTIONS] [ACTION]"
      echo "Description: Call the ACPI stack given OPTIONS and optional ACTION.
             If ACTION is empty, then you'll take it from the name of the script
             caller doACTION (e.g. doshutdown, dosuspend)"
      echo "Options:
  -x: be aware of X
  -t: be aware of tmux
  -f: force: don't call \`lock', go straight to \`confirm'"
      exit 0 ;;
    *) [[ -z $AS_SESSION ]] && AS_SESSION=$arg
  esac
done

unset INIT

if $force; then
  INIT="@DOACPI_ACPI_CONFIRM@ $AS_SESSION $SWITCH"
else
  INIT="@DOACPI_ACPI_LOCK@ $AS_SESSION $SWITCH"
fi

if $use_tmux; then
  tmux new-session -d -s "$AS_SESSION" "INIT=\"$INIT\" zsh"

  if [[ $? == 1 ]]; then
    tmux kill-session -t "$AS_SESSION"

    tmux new-session -d -s "$AS_SESSION" "INIT=\"$INIT\" zsh"
  fi

  tmuxa $($use_x && echo '-x') "$AS_SESSION"
else
  exec $INIT
fi
