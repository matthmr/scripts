#!/usr/bin/bash

case $1 in
  '--help'|'-h')
    echo "Usage:       dbus-prog [options] <prog>"
    echo "Description: Starts or kills a program with dbus"
    echo "Options:
  --start: start (default)
  --file: use environment file
  --list: lists dbus-like processes
  --stop: stop
  --no-prog: ignore the program
  --no-bus: ignore the killing dbus"
    exit 1;;
esac

no_prog=false
no_bus=false

on_file=false
on_sys=false

op=start
prog=""

for arg in ${@:1}; do
  case $arg in
    '--start')
      op=start;;
    '--stop')
      op=stop;;

    '--list')
      no_prog=true
      op=list;;

    '--file')
      on_file=true;;

    '--no-prog')
      no_prog=true;;
    '--no-bus')
      no_bus=true;;
    *)
      prog+="$arg "
  esac
done

if [[ -z $prog && $no_prog == 'false' ]]; then
  echo "[ !! ] No program was specified"
  exit 1
fi

case $op in
  'list')
    echo "[ == ] pgrep -af dbus"
    pgrep -af dbus ;;

  'start')
    if $no_prog; then
      echo "[ !! ] \`--no-prog' cannot be used with empty \`--start'"
      exit 1
    fi

    echo "[ == ] dbus-launch $prog"

    if $on_file; then
      echo "[ == ] Using file"

      if [[ ! -f /tmp/dbus-env ]]; then
        export DBUS_SESSION_BUS_ADDRESS=$(dbus-launch sh -c "echo \$DBUS_SESSION_BUS_ADDRESS")
        echo "export DBUS_SESSION_BUS_ADDRESS=\"$DBUS_SESSION_BUS_ADDRESS\"" > /tmp/dbus-env
      else
        eval $(cat /tmp/dbus-env)
      fi

      exec $prog
    else
      exec dbus-launch $prog
    fi ;;

  'stop')
    if $on_file; then
      rm -v /tmp/dbus-env
    fi

    if ! $no_prog; then
      echo "[ == ] pkill -f -TERM $prog"
      eval pkill -f -TERM $prog
      echo "[ == ] sleep 5"
      sleep 5
    fi

    if ! $no_bus; then
      echo "[ == ] pkill -f -TERM 'dbus-daemon.*--session$'"
      eval pkill -f -TERM 'dbus-daemon.*--session$'
    fi ;;
esac
