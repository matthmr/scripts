#!/usr/bin/bash
function google {
  [[ $# = 0 ]] && {
    echo "[ !! ] See \`--help'"
    return 1
  }

  case $1 in
    '-h'|'--help')
      echo "Usage: google '<query>'"
      return 0;;
  esac

  local QUERY="${@// /+}"

  w3m "https://www.google.com/search?q=${QUERY}"
}

function icd {
  pushd $1 >/dev/null
  dirs -c
}

function tcd {
  icd ~
  cd  $1
}

function mkscript {
  case $1 in
    '-h'|'--help')
      echo "Usage: mkscript <script> [editor]"
      return 1;;
  esac

  touch "$1" && chmod --verbose +x "$1"
  [[ ! -z "$2" ]] && "${@:2}" "$1"
}
function mkproj {
  case $1 in
    '-h'|'--help')
      printf "Usage: mkproj [-s] <project> [editor]\n"
      printf "Options:\n  -s: <project> is relative to the standard source, otherwise it's absolute\n"
      return 1;;
  esac

  local dir=
  local off=2
  local stdsrc=@FUNCTIONS_STDSRC@

  if [[ "$1" = '-s' ]]; then
    off=3
    dir="$stdsrc/$2"
  else
    dir=$1
  fi

  mkdir -vp "$dir" && cd "$dir" && git init
  if [[ ! -z ${@[$off]} ]]; then
    echo "[ == ] Editing as: ${@:$off}" "README.md"
    "${@:$off}" "README.md"
  fi
}

function unicode {
  printf "$@" | iconv -f UTF8 -t UTF16BE | xxd
}

function psof {
  /usr/bin/ps --forest -C "$1" -o \
              pid,ppid,user,priority,nice,rss,s,%cpu,%mem,cputime,tty,command
}

function gitat {
  case $1 in
    '--help'|'-h')
      echo "Usage:       gitat DIR ARGS..."
      echo "Description: Runs \`git -C' at DIR with ARGS"
      return 0;;
    *)
      DIR=$1;;
  esac

  ARGS=${@:2}

  git -C $DIR $ARGS
}

function rsswith {
  case $1 in
    '--help'|'-h')
      echo "Usage:       rsswith <EXTENSIONLESS-FILE>"
      echo "Description: Runs \`newsboat' without fucking up. You have to have \
a \`.txt' file for urls, and \`.db' file for the database. Pass them \
*without* their extensions"
      return 0;;
    *)
      OTH=$1;;
  esac

  URL=$OTH.txt
  DB=$OTH.db
  REST=${@:2}

  if [[ ! -f $URL ]]; then
    echo "[ !! ] Missing file"
    return 1
  fi

  newsboat -u $URL -c $DB $REST
}
