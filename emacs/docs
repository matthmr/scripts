#!/usr/bin/bash

case $1 in
  '-h'|'--help'|'')
    echo "Usage:       docs [OPTIONS] MAJOR-MODE:MINOR-MODE"
    echo "Description: Writes documentation on local document repositories"
    echo "Options:
  -i: choose interactively (fzf/dmenu-like command)
  -x: be aware of X
  -s: launch a tmux session
  -t: ... and attach to it

Major Modes:
  - wiki
  - journal
  - project

Minor Modes:
  Wiki:
    :file-path
  Journal:
    :YYMM
  Project
    :project:file-path"
    echo "Environment:
  EDITOR: call \`EDITOR' instead of the default"
  exit 1;;
esac

#### Defaults

WIKI=@DOCS_WIKI@
JOURNAL=@DOCS_JOURNAL@
PROJECT=@DOCS_PROJECT_BASE@
REPO=''
XTERM=urxvt

[[ -z $EDITOR ]] && EDITOR='emacsclient -t'

#### Modes

# wikicmd FILE_PATH
function wikicmd {
  local file=''

  if [[ -z $1 ]]; then
    echo "[ WW ] Missing command for \`wiki-mode'; defaulting to index"
    [[ -z $int ]] && file=index
  else
    file=$1
  fi

  if [[ ! -z $int ]]; then
    REPO=$(find $WIKI/$file '(' -type f -or -type l ')' -name '*.md' | $int)
    return 0
  fi

  if [[ -d $WIKI/$file ]]; then
    REPO="$WIKI/$file"
  else
    REPO="$WIKI/$file.md"
  fi
}

# projectcmd REPO_PATH:FILE_PATH
function projectcmd {
  if [[ -z $1 ]]; then
    echo "[ !! ] Missing command for \`project-mode'; \
defaulting \`project-mode' is not supported"
    exit 1
  fi

  local repo=${1%%:*}
  local file=${1#*:}

  if [[ $repo == $file ]]; then
    file=''
  fi

  if [[ -z $file ]]; then
    [[ -z $int ]] && file="DEV/index.md" || file="DEV"
  elif [[ -d $file ]]; then
    file="DEV/$file"
  else
    file="DEV/$file.md"
  fi

  if [[ ! -z $int ]]; then
    REPO=$(find $PROJECT/$repo/$file '(' -type f -or -type l ')' -name '*.md' | $int)
    return 0
  fi

  REPO="$PROJECT/$repo/$file"
}

# journalcmd YYMM
function journalcmd {
  local date=''

  if [[ -z $1 ]]; then
    echo "[ WW ] Missing command for \`journal-mode'; \
defaulting to current date"
    date=$(date +'%y%m')
  else
    date=$1
  fi

  case $date in
    [0-9][0-9][0-9][0-9])
      local yy=${date:0:2}
      local mm=${date:2:2}
      REPO="$JOURNAL/20$yy/$mm.md" ;;
    [0-9][0-9])
      local yy=${date:0:2}
      REPO="$JOURNAL/20$yy" ;;
    *)
      echo "[ !! ] Command doesn't evaluate"
      exit 1 ;;
  esac

  if [[ ! -z $int ]]; then
    REPO=$(find $REPO '(' -type f -or -type l ')' -name '*.md' | $int)
    return 0
  fi
}

#### Args

use_x=false
use_tmux=''
int=''

for arg in $@; do
  case $arg in
    '-i') int='fzf';;
    '-x') use_x=true
          if [[ ! -z $int ]]; then
            int='dmenu -p choose'
          fi ;;
    '-s'|'-t') use_tmux=$arg ;;
    *) mode_arg=$arg ;;
  esac
done

mode=${mode_arg%%:*}
cmd=${mode_arg#*:}

# there is no `:': there is no `cmd'
if [[ $cmd == $mode ]]; then
  cmd=''
fi

case $mode in
  'wiki')
    wikicmd $cmd;;
  'journal')
    journalcmd $cmd;;
  'project')
    projectcmd $cmd;;
  *)
    echo "[ !! ] Invalid mode"
    exit 1;;
esac

if [[ -z $REPO ]]; then
  echo "[ !! ] No \`REPO'"
  exit 1
fi

echo "[ == ] Running as: $EDITOR $REPO"

if [[ ! -z $use_tmux ]]; then
  tmux new-session -d -s "docs" -n "emacsclient" $EDITOR $REPO

  if [[ $use_tmux == '-t' ]]; then
    exec tmuxa $($use_x && echo "-x") docs
  fi
elif $use_x; then
  exec $XTERM -e $EDITOR $REPO
else
  exec $EDITOR $REPO
fi
