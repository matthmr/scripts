#!/usr/bin/bash

case $1 in
  '-h'|'--help'|'')
    echo "Usage:       docs [OPTIONS] MAJOR-MODE:MINOR-MODE"
    echo "Description: Writes documentation on local document repositories"
    echo "Options:
  -i: launch interactive (fzf-like command)
  -x: launch a X terminal emulator
  -I: launch interactive (dmenu-like command)
  -t: use tmux-tty

Major Modes:
  - wiki
  - journal
  - project

Minor Modes:
  Wiki:
    :file-path
  Journal:
    :YYMM
  Project
    :project:file-path"
  exit 1;;
esac

#### Defaults

WIKI=@DOCS_WIKI@
JOURNAL=@DOCS_JOURNAL@
PROJECT=@DOCS_PROJECT_BASE@
REPO=''
EDITOR='emacsclient -t'
MENU_CHOOSE='' # i=fzf, I=dmenu
XTERM=urxvt
TMUX_NAME=tmux

#### Modes

# Expect: FILE_PATH
function wikicmd {
  local file=''

  if [[ -z $1 ]]; then
    echo "[ WW ] Missing command for \`wiki-mode'; defaulting to index"
    file=index
  else
    file=$1
  fi

  if [[ -d $WIKI/$FILE ]]; then
    REPO="$WIKI/$FILE"
  else
    REPO="$WIKI/$FILE.org"
  fi
}

# Expect: REPO_PATH:FILE_PATH
function projectcmd {
  if [[ -z $1 ]]; then
    echo "[ !! ] Missing command for \`project-mode'; \
defaulting \`project-mode' is not supported"
    exit 1
  fi

  local repo=${1%%:*}
  local file=${1#*:}

  if [[ $repo = $file ]]; then
    file=''
  fi

  if [[ -z $file ]]; then
    file="dev/index.org"
  elif [[ -d $file ]]; then
    file="dev/$file"
  else
    file="dev/$file.org"
  fi

  REPO="$project/$repo/$file"
}

# Expect: YY, YYMM
function journalcmd {
  local date=''

  if [[ -z $1 ]]; then
    echo "[ WW ] Missing command for \`journal-mode'; \
defaulting to current date"
    date=$(date +'%y%m')
  else
    date=$1
  fi

  case $date in
    [0-9][0-9][0-9][0-9])
      local yy=${date:0:2}
      local mm=${date:2:2}
      REPO="$JOURNAL/20$yy/$mm.org" ;;
    [0-9][0-9])
      local yy=${date:0:2}
      REPO="$JOURNAL/20$yy" ;;
    *)
      echo "[ !! ] Command doesn't evaluate"
      exit 1 ;;
  esac
}

#### Args

use_x=false

for arg in $@; do
  case $arg in
    '-i')
      mode_arg=$arg
      MENU_CHOOSE='fzf';;
    '-x')
      use_x=true ;;
    '-I')
      mode_arg=$arg
      MENU_CHOOSE='dmenu -p choose';;
    '-t')
      mode_arg=$arg
      TMUX_NAME=@DOCS_TMUX_TTY@;;
    *)
      mode_arg=$arg ;;
  esac
done

mode=${mode_arg%%:*}
cmd=${mode_arg#*:}

case $mode in
  'wiki')
    REPO=$WIKI ;;
  'journal')
    REPO=$JOURNAL ;;
  'project')
    REPO=$PROJECT ;;
  *)
    echo "[ !! ] Invalid mode"
    exit 1;;
esac

# there is no `:'
if [[ $cmd = $mode ]]; then
  cmd=''
fi

if [[ ! -z $MENU_CHOOSE ]]; then
  case $mode in
    'wiki')
      CHOOSE=$(find $REPO -type f -name '*.org' | $MENU_CHOOSE) ;;
    'journal')
      CHOOSE=$(find $REPO -type f -name '[0-9][0-9].org' | $MENU_CHOOSE) ;;
    'project')
      CHOOSE=$(find $REPO/*/dev -type f -name '*.org' | $MENU_CHOOSE) ;;
  esac

  if [[ -z $CHOOSE ]]; then
    echo "[ !! ] Chose nothing"
    exit 1
  fi

  REPO=$CHOOSE
else
  case $mode in
    'wiki')
      wikicmd $cmd;;
    'journal')
      journalcmd $cmd;;
    'project')
      projectcmd $cmd;;
    *)
      echo "[ !! ] Invalid mode"
      exit 1;;
  esac
fi

echo "[ == ] Running as: $EDITOR $REPO"

$TMUX_NAME new-session -d \
           -s "docs" \
           -n "emacsclient" \
           $EDITOR $REPO

CC=$(tmux list-clients -F "#{client_name}")
CCS=$(echo $CC | wc -l)

if [[ $CCS -gt 1 ]]; then
  echo "[ !! ] Multiple tmux clients. Please have just one"
  exit 0
elif $use_x && [[ -z $CC ]]; then
  exec $XTERM -e $TMUX_NAME attach-session -t 'docs' # tmux is not yet attached
else
  $TMUX_NAME switch-client -c $CC -t 'docs'
fi
