#!/usr/bin/bash

case $1 in
  '-h'|'--help'|'')
    echo "Usage:       docs [OPTIONS] MAJOR-MODE:MINOR-MODE"
    echo "Description: Writes documentation on local document repositories"
    echo "Options:
  -i: choose interactively (fzf/dmenu-like command)
  -x: be aware of X
  -s: launch a tmux session
  -t: ... and attach to it

Major Modes:
  - wiki
  - journal
  - project

Minor Modes:
  Wiki:
    :file-path
  Journal:
    :YYMM
  Project
    :project:file-path"
  exit 1;;
esac

#### Defaults

WIKI=@DOCS_WIKI@
JOURNAL=@DOCS_JOURNAL@
PROJECT=@DOCS_PROJECT_BASE@
REPO=''
EDITOR='emacsclient -t'
XTERM=urxvt

#### Modes

# Expect: FILE_PATH
function wikicmd {
  local file=''

  if [[ -z $1 ]]; then
    echo "[ WW ] Missing command for \`wiki-mode'; defaulting to index"
    file=index
  else
    file=$1
  fi

  if [[ -d $WIKI/$FILE ]]; then
    REPO="$WIKI/$FILE"
  else
    REPO="$WIKI/$FILE.org"
  fi
}

# Expect: REPO_PATH:FILE_PATH
function projectcmd {
  if [[ -z $1 ]]; then
    echo "[ !! ] Missing command for \`project-mode'; \
defaulting \`project-mode' is not supported"
    exit 1
  fi

  local repo=${1%%:*}
  local file=${1#*:}

  if [[ $repo = $file ]]; then
    file=''
  fi

  if [[ -z $file ]]; then
    file="dev/index.org"
  elif [[ -d $file ]]; then
    file="dev/$file"
  else
    file="dev/$file.org"
  fi

  REPO="$project/$repo/$file"
}

# Expect: YY, YYMM
function journalcmd {
  local date=''

  if [[ -z $1 ]]; then
    echo "[ WW ] Missing command for \`journal-mode'; \
defaulting to current date"
    date=$(date +'%y%m')
  else
    date=$1
  fi

  case $date in
    [0-9][0-9][0-9][0-9])
      local yy=${date:0:2}
      local mm=${date:2:2}
      REPO="$JOURNAL/20$yy/$mm.org" ;;
    [0-9][0-9])
      local yy=${date:0:2}
      REPO="$JOURNAL/20$yy" ;;
    *)
      echo "[ !! ] Command doesn't evaluate"
      exit 1 ;;
  esac
}

#### Args

use_x=false
use_tmux=''
int=''

for arg in $@; do
  case $arg in
    '-i') int='fzf';;
    '-x') use_x=true
          if [[ ! -z $int ]]; then
            int='dmenu -p choose'
          fi ;;
    '-s'|'-t') use_tmux=$arg ;;
    *) mode_arg=$arg ;;
  esac
done

mode=${mode_arg%%:*}
cmd=${mode_arg#*:}

case $mode in
  'wiki')
    REPO=$WIKI ;;
  'journal')
    REPO=$JOURNAL ;;
  'project')
    REPO=$PROJECT ;;
  *)
    echo "[ !! ] Invalid mode"
    exit 1;;
esac

# there is no `:'
if [[ $cmd = $mode ]]; then
  cmd=''
fi

if [[ ! -z $int ]]; then
  case $mode in
    'wiki')
      CHOOSE=$(find $REPO -type f -name '*.org' | $int) ;;
    'journal')
      CHOOSE=$(find $REPO -type f -name '[0-9][0-9].org' | $int) ;;
    'project')
      CHOOSE=$(find $REPO/*/dev -type f -name '*.org' | $int) ;;
  esac

  if [[ -z $CHOOSE ]]; then
    echo "[ !! ] Chose nothing"
    exit 1
  fi

  REPO=$CHOOSE
else
  case $mode in
    'wiki')
      wikicmd $cmd;;
    'journal')
      journalcmd $cmd;;
    'project')
      projectcmd $cmd;;
    *)
      echo "[ !! ] Invalid mode"
      exit 1;;
  esac
fi

echo "[ == ] Running as: $EDITOR $REPO"

if [[ ! -z $use_tmux ]]; then
  tmux new-session -d -s "docs" -n "emacsclient" $EDITOR $REPO

  if [[ $use_tmux == '-t' ]]; then
    if $use_x; then
      exec tmuxa -x docs
    else
      exec tmuxa docs
    fi
  fi
elif $use_x; then
  exec $XTERM -e $EDITOR $REPO
else
  exec $EDITOR $REPO
fi
