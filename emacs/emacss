#!/usr/bin/bash

function help {
  echo "Usage:       emacss [start|stop|toggle|restart|purge|status]"
  echo "Description: Starts an emacs server"
}

case $1 in
  '-h'|'--help')
    help
    exit 1;;
esac

SHELL=/usr/bin/sh
BASE=/tmp/emacs

[[ -z $EMACSSERVER ]] && EMACSSERVER='emacs'
[[ -z $EMACSCLIENT ]] && EMACSCLIENT='emacsclient'

EMACSSERVER_OPTS="--daemon=$BASE/server"

function emacs_eval {
  local lisp_expr=$1
  ${EMACSCLIENT} -e "${lisp_expr}"
}

function emacs_start {
  if [[ -d $BASE && -S $BASE/server ]]; then
    echo "[ !! ] An emacs server is already running"

    if [[ -f $BASE/pid ]]; then
      return 1
    else
      echo "[ WW ] Found a server running without a PID file; creating one"
      emacs_eval "(emacs-pid)" > $BASE/pid
      return 1
    fi
  fi

  echo "[ .. ] Starting emacs server"
  echo "[ == ] ${EMACSSERVER} ${EMACSSERVER_OPTS} &"

  ${EMACSSERVER} ${EMACSSERVER_OPTS} &

  local emacs_parent_pid=$!
  echo "[ == ] Got parent PID of \`$emacs_parent_pid'"

  wait $emacs_parent_pid

  local emacs_daemon_pid=$(emacs_eval "(emacs-pid)")
  echo "[ == ] Got deamon PID of \`$emacs_daemon_pid'"

  echo ${emacs_daemon_pid} > $BASE/pid
}

function emacs_stop {
  local emacs_daemon_pid;

  if [[ ! -d $BASE || ! -S $BASE/server ]]; then
    echo "[ !! ] No emacs server was found"
    return 1
  fi

  if [[ ! -f $BASE/pid ]]; then
    echo "[ WW ] Missing PID file; requerying"
    emacs_daemon_pid=$(emacs_eval "(emacs-pid)")
  else
    emacs_daemon_pid=$(cat $BASE/pid)
  fi

  echo "[ .. ] Stopping emacs server"

  emacs_eval "(kill-emacs)"

  echo "[ == ] Got daemon pid of \`$emacs_daemon_pid'"
  rm -v $BASE/pid
}

function emacs_restart {
  local timeout=1

  emacs_stop && \
    echo "[ .. ] Sleeping $timeout" && \
    sleep $timeout && \
    emacs_start
}

function emacs_status {
  if [[ -d $BASE && -S $BASE/server ]]; then
    if [[ -f $BASE/pid ]]; then
      local emacs_pid=$(cat $BASE/pid)
      echo "[ OK ] Found an emacs server running with pid of ${emacs_pid}"
    else
      echo "[ WW ] Found a server running without a PID file; creating one"
      emacs_eval "(emacs-pid)" > $BASE/pid
      local emacs_pid=$(cat $BASE/pid)
      echo "[ OK ] Got pid of \`${emacs_pid}'"
    fi

    return 0
  else
    echo "[ !! ] No emacs server was found"
    return 1
  fi
}

function emacs_toggle {
  emacs_status
  exited=$?

  [[ $exited == 0 ]] && emacs_stop || emacs_start
}

function emacs_purge {
  local emacs_pid=""

  if [[ -d $BASE && -S $BASE/server ]]; then
    if [[ ! -f $BASE/pid ]]; then
      emacs_eval "(emacs-pid)" > $BASE/pid
    fi
  else
    echo "[ !! ] No emacs server was found"
    return 1
  fi

  echo "[ OK ] Got pid of \`$(cat $BASE/pid)'"
  pkill -F $BASE/pid || pkill -KILL -F $BASE/pid

  rm -rf $BASE/server $BASE/pid
  echo "[ OK ] Purged emacs server"
}

case $1 in
  'start'|'stop'|'status'|'restart'|'purge'|'toggle') eval emacs_$1; exit $? ;;
  'help') help; exit 0;;
  *) echo "[ !! ] Invalid action. See \`help'"; exit 1;;
esac

echo "[ OK ] emacsserver: Done"
