#!/usr/bin/sh

set -e

tmp=true
random=false
lock=false
dry=false
write=false
file=''

case $1 in
  '--help'|'-h')
    echo "Usage:       wpset [OPTIONS...] [FILE] [FEH_OPTIONS]"
    echo "Description: Sets or tests FILE as the current wallpaper. Unless
  \`-t' is given, it will echo the path of the wallpaper in /tmp/.wp. If \`-l' is
  given, it'll link the path to ~/.wp, which is restorable by \`-r'"
    echo "Options:
  -t: don't set TMP
  -w: write (LINK) source image
  -k: dry: don't call FEH
  -r: FILE from TMP
  -R: FILE from LINK
  -L: FILE from LOCK
  -d: FILE from random in directory (FILE)
  -l: lock (link to home: LOCK)"
    exit 0;;
esac

feh_opts=""

for arg in $@; do
  case $arg in
    '-t') tmp=false ;;
    '-d') random=true ;;
    '-l') lock=true ;;
    '-k') dry=true ;;
    '-w') write=true ;;
    '-r') file=/tmp/.wp.img ;;
    '-R') file="$(cat /tmp/.wp 2>/dev/null)" ;;
    '-L') file=~/.wp ;;
    *) if [[ -z $file ]]; then file=$arg; else feh_opts+=" $arg"; fi ;;
  esac
done

if [[ -z $file ]]; then
  echo "[ !! ] Missing file. See \`--help'"
  exit 1
fi

if $random; then
  file="$(find "$file" -type f | shuf -n1)"
fi

file="$(realpath "$file")"

if $tmp; then
  echo "$file" > /tmp/.wp
fi

if $lock; then
  ln -svnf "$file" ~/.wp
fi

if $write; then
  ln -svnf "$file" /tmp/.wp.img
fi

if ! $dry; then
  if [[ -z $feh_opts ]]; then
    feh_opts="--bg-scale"
  fi

  eval feh --no-fehbg $feh_opts "$file"
fi
