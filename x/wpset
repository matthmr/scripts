#!/usr/bin/sh

tmp=true
random=false
lock=false
dry=false
browser=false
file=''

case $1 in
  '--help'|'-h')
    echo "Usage:       wpset [OPTIONS...] [FILE]"
    echo "Description: Sets or tests FILE as the current wallpaper. Unless
  \`-t' is given, it will echo the path of the wallpaper in /tmp/.wp. If \`-l' is
  given, it'll link the path to ~/.wp, which is restorable by \`-r'"
    echo "Options:
  -t: don't set TMP
  -k: dry: don't call FEH
  -l: lock
  -b: browser mode; create a JPEG copy for browsers in /tmp/.wp.jpg
  -r: FILE from ~/.wp
  -R: FILE from /tmp/.wp
  -d: FILE from random in directory (FILE)"
    exit 0;;
esac

for arg in $@; do
  case $arg in
    '-t') tmp=false ;;
    '-d') random=true ;;
    '-l') lock=true ;;
    '-b') browser=true ;;
    '-k') dry=true ;;
    '-r') file=~/.wp ;;
    '-R') file="$(cat /tmp/.wp 2>/dev/null)" ;;
    *) file=$arg ;;
  esac
done

if [[ -z $file ]]; then
  echo "[ !! ] Missing file. See \`--help'"
  exit 1
fi

if $random; then
  file="$(find "$file" -type f | shuf -n1)"
fi

file="$(realpath "$file")"

if $tmp; then
  echo "$file" > /tmp/.wp
fi

if $lock; then
  ln -svf "$file" ~/.wp
fi

if ! $dry; then
  feh --bg-scale --no-fehbg "$file"
fi

if $browser; then
  # use ffmpeg to convert the file, or simple copy it
  if [[ ! $(file --dereference --mime $file) =~ '/jpeg' ]]; then
    ffmpeg -y -v 0 -i $file /tmp/.wp.jpg
  else
    cp -L $file /tmp/.wp.jpg
  fi
fi
