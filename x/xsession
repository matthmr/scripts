#!/usr/bin/bash

# used by emacs for emacs-xwm
export WM=$1

XTERM=urxvt
TIMEOUT=5
TRIES=5

# wait for X to start, if it hasn't yet, keep waiting...
sleep $TIMEOUT
while :
do
  pidof $WM > /dev/null && break || sleep $TIMEOUT
  if [[ $TRIES == '0' ]]; then
     exit 1
  fi

  TRIES=$((TRIES-1))
done

mkdir -pv /tmp/emacs
touch /tmp/emacs/daemon.log
touch /tmp/tmux-notes.txt

if [[ ! -f /tmp/mpd-pid ]]; then
  mpd &
fi

# start WM-specific programs
case $WM in
  'dwm'|'i3')
    emacss start >> /tmp/emacs/daemon.log 2>&1 && \
      docs journal >> /tmp/emacs/daemon.log 2>&1
    ;;
  'emacs-xsession'|'emacs-xwm')
    # xsession started inside of Emacs by the exported `XSESSION' variable (only
    # exported for emacs-like window managers
    exit 0
    ;;
esac

# locked: ignore launching `linux.sh'
if [[ $2 == "1" && ! -f /tmp/xsession.lock ]]; then
  touch /tmp/xsession.lock
  echo "[ $(date +%s) ] Note: There's an Xsession tmux session [xsession] pending" \
       >> /tmp/tmux-notes.txt

  (sleep 5 && \
     {
       CC=$(tmux list-clients | cut -f1 -d:)
       CCS=$(echo $CC | wc -l)

       if [[ $CCS -gt 1 ]]; then
         exit 1
       elif [[ -z $CC ]]; then
         exec $XTERM -e tmux attach-session -t 'xsession'
       else
         tmux display-popup \
              -c $CC \
              -T 'note' \
              "cat /tmp/tmux-notes.txt" >/dev/null 2>/dev/null &
       fi
     }
  ) &

  tmux new-session -d \
       -s 'xsession' \
       -e XINITSLEEP='/home/mh/Scripts/system/linux.sh' \
       zsh
fi

exec $XTERM -e tmux attach-session -t 'docs'
