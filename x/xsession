#!/usr/bin/bash

# used by emacs for emacs-xwm
export WM=$1

XTERM=urxvt
TIMEOUT=5
TRIES=5

SHOULD_MSG=false

function session_msg {
  local msg=$1
  SHOULD_MSG=true

  echo "[ $(date +%s) ] $msg" >> /tmp/session-msg
}

# wait for X to start, if it hasn't yet, keep waiting...
sleep $TIMEOUT
while :; do
  pidof $WM > /dev/null && break || sleep $TIMEOUT
  if [[ $TRIES == '0' ]]; then
     exit 1
  fi

  TRIES=$((TRIES-1))
done

if [[ ! -f /tmp/schedl/session-lock ]]; then
  jobs=$(find /tmp/schedl -type f -not -name '*.sh' 2>/dev/null)
  sh_jobs=$(find /tmp/schedl -type f -name '*.sh' 2>/dev/null)

  touch /tmp/schedl/session-lock

  if [[ ! -z $jobs ]]; then
    for job in $(echo $jobs | tr '\n' ' '); do
      session_msg "Schedl Job ($job): $(cat $job)"
    done
  fi

  if [[ ! -z $sh_jobs ]]; then
    session_msg "NOTE: There are Schedl script jobs pending"
    tmux new-session -d \
         -s 'schedl' \
         -e XINITSLEEP='/home/mh/Scripts/job/schedl-session.sh' \
         -e XINITSLEEPARGS="$(echo $sh_jobs | tr '\n' ' ')" \
         zsh
  fi
fi

# start WM-specific programs
case $WM in
  'dwm'|'i3')
    emacss start >> /tmp/emacs/daemon.log 2>&1 && \
      docs journal >> /tmp/emacs/daemon.log 2>&1
    ;;
  'emacs-xsession'|'emacs-xwm')
    # xsession started inside of Emacs by the exported `XSESSION' variable (only
    # exported for emacs-like window managers)
    exit 0
    ;;
esac

# locked: ignore launching `linux.sh'
if [[ $2 == "1" && ! -f /tmp/session-lock ]]; then
  touch /tmp/session-lock
  session_msg "Note: There's an Xsession tmux session [xsession] pending"

  tmux new-session -d \
       -s 'xsession' \
       -e XINITSLEEP='/home/mh/Scripts/system/linux.sh' \
       zsh
fi

if $SHOULD_MSG; then
  (sleep $TIMEOUT && \
     {
       CC=$(tmux list-clients | cut -f1 -d:)
       CCS=$(echo $CC | wc -l)

       if [[ $CCS -gt 1 ]]; then
         exit 1
       elif [[ -z $CC ]]; then
         $XTERM -e tmux new-session -A -s 'xsession' &
       fi

       tmux display-popup \
            -c $CC \
            -T 'note' \
            "cat /tmp/session-msg" >/dev/null 2>/dev/null &
     }
  ) &
fi

CC=$(tmux list-clients | cut -f1 -d:)
CCS=$(echo $CC | wc -l)

if [[ $CCS -gt 1 ]]; then
  exit 1
elif [[ -z $CC ]]; then
  exec $XTERM -e tmux attach-session -t 'docs'
else
  exec tmux switch-client -C $CC -t 'docs'
fi
