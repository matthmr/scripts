#!/usr/bin/env bash
# Made by mH (https://github.com/matthmr)

# hide the cursor (tty only)
printf '\x1b[?16;c'

STARTX=sx
SHELL=bash

READINPUT="read -r -n 1 -s key"

HIGHLIGHT_ENTRY="\x1b[7;49;37m"
BULLET=" * "
BULLET_INFO="\x1b[1;92m$BULLET\x1b[0m"
BULLET_ERR="\x1b[1;91m$BULLET\x1b[0m"

SESSIONS=('dwm' 'i3' 'awesome' 'dwm-git' 'tty')
SESSION=

I=0
HIGH=0
LEN=

# format session entry
fmt() {
  if (( $2 < $HIGH ))
  then
    local DIFF=$(($HIGH - $2 - 1))
    local PADDING=$(eval "printf ' %.0s' {0..$DIFF}")
  fi

  echo "$1$PADDING"
}

# get longest session name; populate the session entry length manifest
getlen() {
  while read i
  do
    SESSIONLEN+=("${#SESSIONS[i]}")
    if (( $HIGH < ${SESSIONLEN[i]} ))
    then
      HIGH=${SESSIONLEN[i]}
    fi
  done < <(seq 0 $1)
}

# populate session entry
pop_entry() {
  LEN=${#SESSIONS[@]}
  LEN=$((LEN-1))

  getlen $LEN

  while read i
  do
    SESSIONENTRY+=("$BULLET\x1b[1m $(fmt ${SESSIONS[i]} ${SESSIONLEN[i]}) \x1b[0m")
  done < <(seq 0 $LEN)
}

# print entry without highlight
clear_current() {
  printf "${SESSIONENTRY[I]}"
}

# move the cursor down:
#  - if on last; return to the saved position
cursor_down() {
  I=$((I+1))

  if [[ $I > $LEN ]]
  then
    I=0
    printf "\x1b[${LEN}F$HIGHLIGHT_ENTRY${SESSIONENTRY[I]}\x1b[0G"
  else
    printf "\x1b[1E$HIGHLIGHT_ENTRY${SESSIONENTRY[I]}\x1b[0G"
  fi
}

# move the cursor up:
#  - if on first; return to the saved position
cursor_up() {
  I=$((I-1))

  if [[ $I = '-1' ]]
  then
    I=$LEN
    printf "\x1b[${LEN}E$HIGHLIGHT_ENTRY${SESSIONENTRY[I]}\x1b[0G"
  else
    printf "\x1b[1F$HIGHLIGHT_ENTRY${SESSIONENTRY[I]}\x1b[0G"
  fi
}

choose_session_type() {
  read ans

  if [[ $ans = 'n' ]]; then
    return 1
  else
    echo "yes"
  fi
}

# start the session
#  - if chosen the last one, quit the program
run_session() {
  export wm
  export session_type

  printf '\x1b[?6;c'

  case $SESSION in
    tty)
      printf "\n$BULLET_INFO Logging in with tty\n\n"
      unset session_type
      unset wm
      exec $SHELL;;
    *)
      session_type=$(choose_session_type)
      printf "\n$BULLET_INFO Logging in with $SESSION\n\n"
      session_type="$session_type" wm="$SESSION"
      exec $STARTX;;
  esac
}

# handle keypress
handle() {
  if [[ "$1" = "j" ]]
  then
    clear_current
    cursor_down
  elif [[ "$1" = "k" ]]
  then
    clear_current
    cursor_up
  fi
}

list_sessions() {
  printf "$HIGHLIGHT_ENTRY"

  while read i
  do
    printf "${SESSIONENTRY[i]}\n"
  done < <(seq 0 $LEN)

  printf "\x1b[$((LEN+2))F\x1b[0G\n"
}

choose_session() {
  pop_entry
  printf "\n$BULLET_INFO Choose a window manager to log in with\n\n"
  list_sessions

  while [[ "$key" != "l" ]]
  do
    $READINPUT
    handle $key
  done

  SESSION=${SESSIONS[I]}
  printf "\033[?25h\033[?6;c\n\033[999;999H "
  printf "$BULLET_INFO Run with xsession? [Y/n] "
}

### BEGIN: MAIN ###
choose_session
run_session
### END: MAIN ###
