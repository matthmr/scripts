#!/usr/bin/bash

## Xsession counterpart for the TTY

# used for the emacs server to set itself up for a TTYsession
export WM="$1"
export XSESSION="$2"

export TERM=linux

SHOULD_MSG=false
TIMEOUT=5

function session_msg {
  local msg=$1
  SHOULD_MSG=true

  echo "[ $(date +%s) ] $msg" >> /tmp/session-msg
}

if [[ ! -f /tmp/schedl/session-lock ]]; then
  jobs=$(find /tmp/schedl -type f -not -name '*.sh' 2>/dev/null)
  sh_jobs=$(find /tmp/schedl -type f -name '*.sh' 2>/dev/null)

  touch /tmp/schedl/session-lock

  if [[ ! -z $jobs ]]; then
    for job in $(echo $jobs | tr '\n' ' '); do
      session_msg "Schedl Job ($job): $(cat $job)"
    done
  fi

  if [[ ! -z $sh_jobs ]]; then
    session_msg "NOTE: There are Schedl script jobs pending"
    tmux -f "/home/p/config/tmux-tty.conf" new-session -d \
         -s 'schedl' \
         -e XINITSLEEP='/home/mh/Scripts/job/schedl-session.sh' \
         -e XINITSLEEPARGS="$(echo $sh_jobs | tr '\n' ' ')" \
         zsh
  fi
fi

gpm-tty status >/dev/null 2>/dev/null
GPM_STAT=0 #$? # FIXME

if [[ $GPM_STAT == '1' ]]; then
  tmux -f "/home/p/config/tmux-tty.conf" new-session -d \
       -e XINITSLEEP='gpm-tty' \
       -e XINITSLEEPARGS='prompt' \
       -s gpm-tty zsh
  session_msg "Note: There's a GPM tmux session [gpm-tty] pending"
fi

# this will fail if emacs has an existing session
case $WM in
  'tty'|'tmux-tty')
    SESSION=zsh

    emacss start >> /tmp/emacs/daemon.log 2>&1 && \
      docs -t journal >> /tmp/emacs/daemon.log 2>&1

    if [[ $XSESSION == "1" && ! -f /tmp/session-lock ]]; then
      # locked: ignore launching `linux.sh'
      touch /tmp/session-lock
      session_msg "Note: There's an Xsession tmux session [xsession] pending"
      tmux -f "/home/p/config/tmux-tty.conf" new-session -d \
           -e XINITSLEEP='/home/mh/Scripts/system/linux.sh' \
           -s ttysession zsh
    fi ;;

  # we don't start the server when running `emacs-tty'
  'emacs-tty')
    SESSION=emacs

    if [[ $XSESSION == "1" ]]; then
      export XINITSLEEP='/home/mh/Scripts/system/linux.sh'
    else
      unset XINITSLEEP
    fi ;;
esac

if $SHOULD_MSG; then
  (sleep $TIMEOUT && \
     {
       CC=$(tmux list-clients | cut -f1 -d:)
       CCS=$(echo $CC | wc -l)

       if [[ $CCS -gt 1 || -z $CC ]]; then
         exit 1
       else
         tmux -f "/home/p/config/tmux-tty.conf" display-popup \
              -c $CC \
              -T 'note' \
              "cat /tmp/session-msg" >/dev/null 2>/dev/null &
       fi
     }
  ) &
fi

if [[ $WM == 'tty' ]]; then
  tmux -f "/home/p/config/tmux-tty.conf" attach-session -t 'docs'
fi

exec $SESSION
