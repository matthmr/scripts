#!/usr/bin/bash

function help {
  echo "Usage:       emacss [start|stop|status|restart|toggle|purge]"
  echo "Description: Starts an emacs server"
}

function log {
  echo "$EPOCHSECONDS > " $@ 1>&2
}

case $1 in
  '-h'|'--help')
    help
    exit 1;;
esac

SHELL=/usr/bin/sh
BASE=/tmp/emacs

[[ -z $EMACSSERVER ]] && EMACSSERVER='/usr/bin/emacs'
[[ -z $EMACSCLIENT ]] && EMACSCLIENT='/usr/bin/emacsclient'

EMACSSERVER_OPTS="--daemon=$BASE/server"
EMACSCLIENT_OPTS="-s $BASE/server"

function emacseval {
  local lisp_expr=$1
  ${EMACSCLIENT} ${EMACSCLIENT_OPTS} -e "${lisp_expr}"
}

function start {
  if [[ -d $BASE && -S $BASE/server ]]; then
    log "[ !! ] An emacs server is already running"
    if [[ -f $BASE/pid ]]; then
      exit 1
    else
      log "[ WW ] Found a server running without a PID file; creating one"
      emacseval "(emacs-pid)" > $BASE/pid
      exit 1
    fi
  fi

  log "[ .. ] Starting emacs server"
  log "[ == ] ${EMACSSERVER} ${EMACSSERVER_OPTS} &"

  ${EMACSSERVER} ${EMACSSERVER_OPTS} & </dev/null &>/dev/null
  pid=$!

  log "[ .. ] Sleeping"
  sleep ${TIMEOUT:-5}

  log "[ == ] Got parent PID of \`$pid'"
  local emacs_daemon_pid=$(emacseval "(emacs-pid)")
  log "[ == ] Got deamon PID of \`$pid'"
  echo ${emacs_daemon_pid} > $BASE/pid
}

function stop {
  local pid;

  if [[ ! -d $BASE ]]; then
    log "[ !! ] No emacs server was found"
    exit 1
  elif [[ -d $BASE && ! -S $BASE/server ]]; then
    log "[ !! ] No emacs server was found"
    exit 1
  fi

  if [[ ! -f $BASE/pid ]]; then
    log "[ WW ] Missing PID file; requerying"
    pid=$(emacseval "(emacs-pid)")
  else
    pid=$(cat $BASE/pid)
  fi

  log "[ .. ] Stopping emacs server"

  local emacs_lisp_expr="(kill-emacs)"

  emacseval "$emacs_lisp_expr" </dev/null &>/dev/null &

  log "[ == ] Got daemon pid of \`$pid'"
  rm -v $BASE/pid
  #kill ${pid} 2>/dev/null
}

function toggle {
  if [[ -d $BASE ]]; then
    if [[ -f $BASE/pid ]]; then
      stop
    else
      start
    fi
  else
    start
  fi
}

function restart {
  local timeout=5s

  stop && \
    log "[ .. ] Sleeping $timeout" && \
    sleep $timeout && \
    start
}

function status {
  log "[ .. ] Getting status for the emacs server"

  if [[ -d $BASE && -S $BASE/server ]]; then
    if [[ -f $BASE/pid ]]; then
      local emacs_pid=$(cat $BASE/pid)
      log "[ OK ] Found an emacs server running with pid of ${emacs_pid}"
      exit 0
    else
      log "[ WW ] Found a server running without a PID file; creating one"
      emacseval "(emacs-pid)" > $BASE/pid
      local emacs_pid=$(cat $BASE/pid)
      log "[ OK ] Got pid of \`${emacs_pid}'"
    fi
  else
    log "[ !! ] No emacs server was found"
    exit 1
  fi
}

function purge {
  if [[ -d $BASE && -f $BASE/pid ]]; then
    log "[ WW ] Found an instance of emacs"
  fi

  local emacs_pid=$(emacseval "(emacs-pid)")
  log "[ OK ] Got pid of \`${emacs_pid}'"
  kill -TERM $emacs_pid

  rm -rf $BASE/pid
  rm -rf $BASE/server
  log "[ OK ] Purged emacs server"
}

case $1 in
  'start')   start   || exit $?;;
  'stop')    stop    || exit $?;;
  'status')  status  || exit $?;;
  'restart') restart || exit $?;;
  'toggle')  toggle  || exit $?;;
  'purge')   purge   || exit $?;;
  *)         help;      exit 1;;
esac

log "[ OK ] emacsserver: Done"
