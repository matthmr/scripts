#!/usr/bin/bash

function help {
  echo "Usage:       passwd [-lad] [entry]"
  echo "Description: Prints passwords for [entry]"
  echo "Options:
  -l: list entries
  -a: add entry
  -d: remove entry
"
  exit 1
}

case "$1" in
  '-h'|'--help')
    help;;
esac

[[ -z $1 ]] && help

list=false add=false rem=false
for arg in $@; do
  case $arg in
    '-l')
      list=true;;
    '-a')
      add=true;;
    '-d')
      rem=true;;
    *)
      ENTRY=$arg;;
  esac
done

PASSWD=@PASSWD_USER@
DEC="age --decrypt"
ENC="age --encrypt --passphrase -o $PASSWD"

FILE=$($DEC $PASSWD 2>/dev/null)

if [[ $? = 1 ]]; then
   echo "[ !! ] Wrong passphrase" 1>&2
   exit 1
fi

function b64entry {
  printf "$1" | base64  
}

if $list; then
  while read line; do
    line=$(echo $line | cut -f1 -d:)
    echo " -> $(echo $line | base64 -d)"
  done < <(echo "$FILE")
  exit 0
fi

if $add; then
  echo "[ NOTE ] Leave any of the fields empty to stop adding" 1>&2
  
  lock=false
  while :; do
    read -p "Entry: " entry
    [[ -z $entry ]] && {
      echo "[ !! ] Cancel" 1>&2
      break
    }
    read -p "Password: " pass
    [[ -z $pass ]] && {
      echo "[ !! ] Cancel" 1>&2
      break
    }
    lock=true
    LINE=$(echo "$(printf "$entry" | base64):$(printf "$pass" | base64)")
    FILE+="
$LINE"
  done

  if $lock; then
    echo "[ .. ] Backing up file" 1>&2
    cp -v $PASSWD $PASSWD.old
    chmod -v 600 $PASSWD.old

    echo "$FILE" | $ENC /dev/stdin
  fi
  exit 0
fi

if $rem; then
  echo "[ NOTE ] Leave any of the fields empty to stop adding" 1>&2

  _FILE="$FILE"

  lock=false
  while :; do
    read -p "Entry: " entry
    [[ -z $entry ]] && {
      echo "[ !! ] Cancel" 1>&2
      break
    }
    entry=$(b64entry $entry)
    __FILE="$(echo "$_FILE" | sed "/^$entry.*/d")"
    _FILE="$__FILE"
    lock=true
  done

  if $lock; then
    echo "[ .. ] Backing up file" 1>&2
    cp -v $PASSWD $PASSWD.old
    chmod -v 600 $PASSWD.old

    echo "$_FILE" | $ENC /dev/stdin
  fi
  exit 0
fi

B64ENTRY=$(b64entry "$ENTRY")
PASSWD=$(echo "$FILE" | awk -F: "
                          /^$B64ENTRY/ {
                            print \$2
                          }")

echo $(printf "$PASSWD" | base64 -d)
