#!/usr/bin/bash

case $1 in
  '-h'|'--help'|'')
    echo "Usage:       docs [options] [major-mode]:[minor-mode]"
    echo "Description: Writes documentation on local document repositories"
    echo "Options:
  -i: launch interactive (fzf-like command)
  -I: launch interactive (dmenu-like command)
  -t: use tmux-tty

Major Modes:
  - wiki
  - journal
  - project

Minor Modes:
  Wiki:
    :file-path
  Journal:
    :YYMM
  Project
    :project:file-path"
    echo "Environment:
  EDITOR: editor command
  DMENU: dmenu-like command for \`-i'
  FZF: fzf-like command for \`-I'"
  exit 1;;
esac

### BEGIN: CONSTS ###
WIKI="/home/mh/Documents/Org/Wiki"
JOURNAL="/home/mh/Documents/Org/Journal"
PROJECT="/home/mh/Git/MH"
### END: CONSTS ###

### BEGIN: VARS ###
REPO=''
EDITOR='emacsclient -s /tmp/emacs/server -t'
EDITOR_ALT='-a emacs'
INT='' # i->fzf,I->dmenu
XTERM='urxvt'
TMUX_NAME=tmux
### END: VARS ###

### BEGIN: MODES ###
function wikicmd {
  if [[ -z $1 ]]; then
    # let interactive-mode figure it out
    if [[ ! -z $INT ]]; then
      return 0
    fi

    echo "[ WW ] Missing command for \`wiki-mode'; defaulting to index"
    FILE=index
  else
    if [[ ! -z $INT ]]; then
      echo "[ !! ] \`interactive-mode' with existing mode is not supported"
      exit 1
    fi

    FILE=$1
  fi

  if [[ -d $REPO/$FILE ]]; then
    REPO+="/$FILE"
  else
    REPO+="/$FILE.org"
  fi
}

function projectcmd {
  if [[ -z $1 ]]; then
    # let interactive-mode figure it out
    if [[ ! -z $INT ]]; then
      return 0
    fi

    echo "[ !! ] Missing command for \`project-mode'; defaulting \`project-mode' is not supported"
    exit 1
  else
    if [[ ! -z $INT ]]; then
      echo "[ !! ] \`interactive-mode' with existing mode is not supported"
      exit 1
    fi
  fi

  local repo=${1%%:*}
  local file=${1#*:}

  if [[ $repo = $file ]]; then
    file=''
  fi

  if [[ -z $file ]]; then
    file="dev/index.org"
  elif [[ -d $file ]]; then
    file="dev/$file"
  else
    file="dev/$file.org"
  fi

  REPO+="/$repo/$file"
}

function journalcmd {
  if [[ -z $1 ]]; then

    # let interactive-mode figure it out
    if [[ ! -z $INT ]]; then
      return 0
    fi

    echo "[ WW ] Missing command for \`journal-mode'; defaulting to current date"
    DATE=$(date +'%y%m')
  else
    if [[ ! -z $INT ]]; then
      echo "[ !! ] \`interactive-mode' with existing mode is not supported"
      exit 1
    fi

    DATE=$1
  fi

  local yy= mm=

  while :; do
    if (( ${#DATE} != 4 )); then
      break
    fi

    yy=${DATE:0:2}
    mm=${DATE:2:2}

    [[ -d $REPO/20$yy/ ]]        || break
    [[ -f $REPO/20$yy/$mm.org ]] || break

    REPO+="/20$yy/$mm.org"

    return 0
  done

  echo "[ !! ] Command doesn't evaluate"
  exit 1
}
### END: MODES ###

### BEGIN: OPTIONS ###

case $1 in
  '-i')
    mode_arg=$2
    [[ -z $FZF ]] && FZF=fzf
    INT=$FZF;;
  '-I')
    mode_arg=$2
    [[ -z $DMENU ]] && DMENU='dmenu -p choose'
    INT=$DMENU;;
  '-t')
    mode_arg=$2
    TMUX_NAME="$TMUX_NAME -f '/home/p/config/tmux-tty.conf'";;
  *)
    mode_arg=$1;;
esac
### END: OPTIONS ###

mode=${mode_arg%%:*}
cmd=${mode_arg#*:}

# there is no `:'
if [[ $cmd = $mode ]]; then
  cmd=''
fi

case $mode in
  'wiki')
    REPO=$WIKI
    wikicmd ${cmd};;
  'journal')
    REPO=$JOURNAL
    journalcmd ${cmd};;
  'project')
    REPO=$PROJECT
    projectcmd ${cmd};;
  *)
    echo "[ !! ] Invalid mode"
    exit 1;;
esac

function feed {
 ans=$(echo "$@" | $INT)

 if [[ -z $ans ]]; then
   echo "[ !! ] Missing command: \`interactive-mode' returned nil"
   exit 1
 fi

 echo $ans
}

if [[ ! -z $INT ]]; then
  case $mode in
    'wiki')
      REPO=$(feed "$(find $REPO -type f -name '*.org')");;
    'journal')
      REPO=$(feed "$(find $REPO -type f -name '[0-9][0-9].org')");;
    'project')
      REPO=$(feed "$(find $REPO/*/dev -type f -name '*.org')");;
  esac
fi

echo "[ == ] Running as: $EDITOR $REPO $EDITOR_ALT"
$TMUX_NAME new-session -d \
           -s "docs" \
           $EDITOR $REPO $EDITOR_ALT

CC=$(tmux list-clients | cut -f1 -d:)
CCS=$(echo $CC | wc -l)

if [[ $CCS -gt 1 ]]; then
  echo "[ !! ] Multiple tmux clients. Please have just one"
  exit 1
elif [[ -z $CC ]]; then
  exit 0 # tmux is not yet attached
else
  echo switch
  $TMUX_NAME switch-client -c $CC -t 'docs'
  exit 2
fi
