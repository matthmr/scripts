#!/usr/bin/bash

SUDO=doas
XTERM=urxvt

if [[ $1 == '-x' ]]; then
  NOTIFY=herbe
else
  NOTIFY=echo
fi

AS=${0##*/}
AS=${AS/rc/}
ARG=

TMUX_ATTACH_STATUS=

# called by sxhkd; only call for non-emacs
if [[ -z $XSESSION ]]; then
  $NOTIFY "Prompting user for checkout on the journal" &
  DOCS_SWITCH=""

  case $WM in
    'tty'|'tmux-tty') DOCS_SWITCH="-t";;
  esac

  docs $DOCS_SWITCH journal

  TMUX_ATTACH_STATUS=$?
fi

if [[ -d /tmp/pacman ]]
then
	if [[ -f /tmp/pacman/lock-pacman ]]
	then
		$NOTIFY "Package lock found:" "found package lock set by \`linux.sh'. Wait to shutdown" &
		ARG=p
	fi

	if [[ -f /tmp/pacman/lock-paru ]]
	then
		$NOTIFY "Package lock found (subsystem):" "also found lock for \`paru'" &
		ARG="${ARG}n"
	fi

	if [[ -f /tmp/pacman/lock-efistub ]]
	then
		$NOTIFY "Efistub lock found:" "found efistub lock set by \`linux.sh'. Wait to shutdown" &
		ARG="${ARG}e"
	fi
fi

if [[ -d /tmp/cron ]]
then
	if [[ ! -z $(/bin/find /tmp/cron -type f -name '*.sh') ]]
	then
		$NOTIFY "Cron-like job found (script):" "Cron-like lock set by \`linux.sh'. Wait to shutdown" &
		ARG="${ARG}c"
  fi

	if [[ ! -z $(/bin/find /tmp/cron -type f -not -name '*.sh') ]]
	then
		$NOTIFY "Cron-like job found:" "Cron-like lock set by \`linux.sh'. Wait to shutdown" &
		ARG="${ARG}d"
	fi
fi

$NOTIFY "Preparing to send ACPI event..."
if [[ $1 == '-x' ]]; then
  printf '\a' > /dev/tty${DISPLAY:1:1}
else
  printf '\a' > /dev/tty1 # imagine...
fi

sleep 1

# clear them first
unset XINITSLEEP
unset XINITSLEEPARGS

XINITSLEEP="/home/mh/Scripts/system/lock.sh"
XINITSLEEPARGS="${ARG}:${AS}"

TMUX_NAME=tmux

case $WM in
  'tmux-tty'|'tty')
    TMUX_NAME="$TMUX_NAME -f '/home/p/config/tmux-tty.conf'" ;;
esac

$TMUX_NAME new-session -d \
           -s "$AS" \
           -e XINITSLEEP=$XINITSLEEP \
           -e XINITSLEEPARGS=$XINITSLEEPARGS \
           zsh

if [[ $? == 1 ]]; then
  $TMUX_NAME kill-session -t "$AS"

  $TMUX_NAME new-session -d \
           -s "$AS" \
           -e XINITSLEEP=$XINITSLEEP \
           -e XINITSLEEPARGS=$XINITSLEEPARGS \
           zsh
fi

if [[ $TMUX_ATTACH_STATUS == 0 ]]; then
  if [[ $1 == '-x' ]]; then
    exec $XTERM -e tmux attach-session -t 'docs'
  else
    case $WM in
      'tty') exec $TMUX_NAME attach-session -t 'docs' ;;
    esac
  fi
fi
