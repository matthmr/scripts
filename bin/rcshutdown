#!/usr/bin/bash

SUDO=doas

if [[ $1 == '-x' ]]; then
  NOTIFY=herbe
else
  NOTIFY=echo
fi

AS=${0##*/}
AS=${AS/rc/}
ARG=

# called by sxhkd; only call for non-emacs
if [[ -z $XSESSION ]]; then
  if [[ $1 == '-x' ]]; then
    $NOTIFY "Prompting user for checkout on the journal" &
    docs -x journal

    XTERM=st
  else
    $NOTIFY "Prompting user for checkout on the journal" &
    docs journal
  fi
fi

if [[ -d /tmp/pacman ]]
then
	if [[ -f /tmp/pacman/lock-pacman ]]
	then
		$NOTIFY "Package lock found" "found package lock set by \`linux.sh'. Wait to shutdown" &
		ARG=p
	fi

	if [[ -f /tmp/pacman/lock-paru ]]
	then
		$NOTIFY "Package lock found (subsystem)" "also found lock for \`paru'" &
		ARG="${ARG}n"
	fi

	if [[ -f /tmp/pacman/lock-efistub ]]
	then
		$NOTIFY "Efistub lock found" "found efistub lock set by \`linux.sh'. Wait to shutdown" &
		ARG="${ARG}e"
	fi
fi

if [[ -d /tmp/cron ]]
then
	if [[ ! -z $(/bin/find /tmp/cron -type f -name '*.sh') ]]
	then
		$NOTIFY "Cron-like job found (script)" "Cron-like lock set by \`linux.sh'. Wait to shutdown" &
		ARG="${ARG}c"
  fi

	if [[ ! -z $(/bin/find /tmp/cron -type f -not -name '*.sh') ]]
	then
		$NOTIFY "Cron-like job found" "Cron-like lock set by \`linux.sh'. Wait to shutdown" &
		ARG="${ARG}d"
	fi
fi

# don't stop emacs-like xsessions
if [[ -z $XSESSION ]]; then
  emacss stop
fi

$NOTIFY "Preparing to send ACPI event..."
if [[ $1 == '-x' ]]; then
  printf '\a' > /dev/tty${DISPLAY:1:1}
else
  printf '\a' > /dev/tty1 # imagine...
fi

sleep 1

# clear them first
unset XINITSLEEP
unset XINITSLEEPARGS

export XINITSLEEP="/home/mh/Scripts/system/lock.sh"
export XINITSLEEPARGS="${ARG}:${AS}"

if [[ $1 == '-x' ]]; then
  exec $XTERM -e zsh
elif [[ $WM == 'tmux' ]]; then
  tmux neww $XINITSLEEP $XINITSLEEPARGS -t
else
  tmux new $XINITSLEEP $XINITSLEEPARGS -t
fi
