#!/usr/bin/sh

_help() {
		echo "Usage:       emacsserver [start|stop|status|restart]"
		echo "Description: Starts an emacs server. Simpler version of \`emacs.mh'"
}

case $1 in
    '-h'|'--help')
				_help
				exit 1
				;;
esac

_start() {
    echo "[ .. ] Starting emacs server"

    SHELL=/usr/bin/sh \
				EMACS=/usr/bin/emacs \
				EMACSCLIENT=/usr/bin/emacsclient \
				EMACSCLIENT_OPTS="-s /run/user/$UID/emacs/server" \
        /home/mh/Scripts/emacs-wrapper.sh --daemon

		notify-send 'emacs-wrapper.sh' "Sucessfully started the emacs server"
}

_stop() {
    echo "[ .. ] Stopping emacs server"

    USER=$USER \
				EMACSCLIENT=/usr/bin/emacsclient \
				EMACSCLIENT_OPTS="-s /run/user/$UID/emacs/server" \
				EMACS_TIMEOUT=10 \
				/home/mh/Scripts/emacs-stop.sh

				notify-send 'emacs-stop.sh' "Sucessfully stopped the emacs server"
}

_restart() {
    _stop && \
				sleep 5 && \
				_start
}

_status() {
    echo "[ .. ] Getting status for the emacs server"

    {
				[[ -d /run/user/$UID/emacs && -s /run/user/$UID/emacs/emacs.pid ]]
    } && {
				notify-send "emacs server status" "Found an emacs server running with pid of $(cat /run/user/$UID/emacs/emacs.pid)"
    } || {
				notify-send "emacs server status" "No emacs server was found"
    }
}

case $1 in
    'start')   _start	|| exit $?;;
    'stop')    _stop	|| exit $?;;
    'status')  _status	|| exit $?;;
    'restart') _restart	|| exit $?;;
    *) _help; exit 1;;
esac

exit 0
